DECLARE tns NAMESPACE 'http://www.example.org/SendSMS/';
DECLARE SMSTree_shared SHARED ROW;

CREATE COMPUTE MODULE SmsSender_Compute
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET OutputLocalEnvironment.TimeoutRequest.Action = 'SET'; 
		SET OutputLocalEnvironment.TimeoutRequest.Identifier = 'SMSSender';
		SET OutputLocalEnvironment.TimeoutRequest.Count= -1;
		SET OutputLocalEnvironment.TimeoutRequest.Interval=5;	
		
		DECLARE SMSTree ROW;
		
		SET SMSTree.*[] = (SELECT A.guid, A.Phone, A.Text FROM Database.SMSLIST AS A WHERE A.STATUS = 'PENDING');
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(SMSTree.*[]);
		IF J = 0 THEN
			RETURN FALSE;
		END IF;
		X : WHILE I <= J DO
			SET OutputRoot.XMLNSC.tns:SendSMSBatch.tns:SMS[I].(XMLNSC.Attribute)id = SMSTree.*[I].guid;
			SET SMSTree_shared.*[I].guid = SMSTree.*[I].guid;
			SET OutputRoot.XMLNSC.tns:SendSMSBatch.tns:SMS[I].tns:Phone = SMSTree.*[I].Phone;
			SET OutputRoot.XMLNSC.tns:SendSMSBatch.tns:SMS[I].tns:Text = SMSTree.*[I].Text;
			SET I = I + 1;	
			IF I > 3 THEN
				LEAVE X;
			END IF;
		END WHILE;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
